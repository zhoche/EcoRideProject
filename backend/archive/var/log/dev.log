[2025-07-16T12:39:36.570616+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T12:39:36.572015+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"secured_area","authenticators":1} []
[2025-07-16T12:39:36.572044+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"secured_area","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T12:39:36.573467+00:00] deprecation.INFO: User Deprecated: Since symfony/security-http 7.2: Using an empty string as user identifier is deprecated and will throw an exception in Symfony 8.0. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-http 7.2: Using an empty string as user identifier is deprecated and will throw an exception in Symfony 8.0. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authenticator/Passport/Badge/UserBadge.php:58)"} []
[2025-07-16T12:39:36.583574+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T12:39:36.616311+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":""}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":""},"types":{"1":2}} []
[2025-07-16T12:39:36.648528+00:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"\" not found. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:64)","authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:39:36.649357+00:00] security.DEBUG: The "App\Security\AppAuthenticator" authenticator set the failure response. {"authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:39:36.649667+00:00] security.DEBUG: The "App\Security\AppAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:39:36.670780+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T12:41:35.439822+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T12:41:35.441176+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"secured_area","authenticators":1} []
[2025-07-16T12:41:35.441209+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"secured_area","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T12:41:35.442536+00:00] deprecation.INFO: User Deprecated: Since symfony/security-http 7.2: Using an empty string as user identifier is deprecated and will throw an exception in Symfony 8.0. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-http 7.2: Using an empty string as user identifier is deprecated and will throw an exception in Symfony 8.0. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authenticator/Passport/Badge/UserBadge.php:58)"} []
[2025-07-16T12:41:35.451567+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T12:41:35.463571+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":""}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":""},"types":{"1":2}} []
[2025-07-16T12:41:35.475801+00:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"\" not found. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:64)","authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:41:35.476560+00:00] security.DEBUG: The "App\Security\AppAuthenticator" authenticator set the failure response. {"authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:41:35.476854+00:00] security.DEBUG: The "App\Security\AppAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\AppAuthenticator"} []
[2025-07-16T12:41:35.496934+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T12:44:11.338141+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T12:44:11.381976+00:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Controller "App\Controller\MigrationController::run" requires the "$migrations" argument that could not be resolved. Cannot autowire argument $migrations of "App\Controller\MigrationController::run()": it references class "Doctrine\Migrations\DependencyFactory" but no such service exists. You should maybe alias this class to the existing "doctrine.migrations.dependency_factory" service." at ArgumentResolver.php line 122 {"exception":"[object] (RuntimeException(code: 0): Controller \"App\\Controller\\MigrationController::run\" requires the \"$migrations\" argument that could not be resolved. Cannot autowire argument $migrations of \"App\\Controller\\MigrationController::run()\": it references class \"Doctrine\\Migrations\\DependencyFactory\" but no such service exists. You should maybe alias this class to the existing \"doctrine.migrations.dependency_factory\" service. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/http-kernel/Controller/ArgumentResolver.php:122)"} []
[2025-07-16T12:58:23.779668+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T12:58:23.784285+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException: "Service "doctrine.migrations.dependency_factory" not found: even though it exists in the app's container, the container inside "App\Controller\MigrationController" is a smaller service locator that only knows about the "router", "request_stack", "http_kernel", "serializer", "security.authorization_checker", "twig", "form.factory", "security.token_storage", "security.csrf.token_manager", "parameter_bag" and "web_link.http_header_serializer" services. Try using dependency injection instead." at ServiceLocator.php line 137 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\ServiceNotFoundException(code: 0): Service \"doctrine.migrations.dependency_factory\" not found: even though it exists in the app's container, the container inside \"App\\Controller\\MigrationController\" is a smaller service locator that only knows about the \"router\", \"request_stack\", \"http_kernel\", \"serializer\", \"security.authorization_checker\", \"twig\", \"form.factory\", \"security.token_storage\", \"security.csrf.token_manager\", \"parameter_bag\" and \"web_link.http_header_serializer\" services. Try using dependency injection instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/dependency-injection/ServiceLocator.php:137)"} []
[2025-07-16T13:03:59.486229+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T13:03:59.532658+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T13:03:59.541083+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.546098+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.562320+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.562569+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.567681+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.567924+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.572613+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.572791+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.574758+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:03:59.583896+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.584111+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.588212+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:03:59.589780+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.590023+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.590859+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.591100+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.591442+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.591572+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.592731+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.592894+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.593640+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:03:59.596104+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.596246+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.596635+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:03:59.597252+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.597383+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.597666+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.597778+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:03:59.598049+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.598163+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.598627+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.598744+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.599061+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:03:59.601421+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:03:59.601551+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:03:59.601878+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:03:59.635609+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T13:11:09.764824+00:00] request.INFO: Matched route "run_migrations". {"route":"run_migrations","route_parameters":{"_route":"run_migrations","_controller":"App\\Controller\\MigrationController::run"},"request_uri":"https://localhost:8000/run-migrations","method":"GET"} []
[2025-07-16T13:11:09.772927+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T13:11:09.779436+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.781101+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.782697+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.782864+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.787028+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.787288+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.789779+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.789950+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.791344+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:11:09.801339+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.801648+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.805748+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:11:09.807002+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.807197+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.807846+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.807977+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.808486+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.808612+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.809681+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.809811+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.811384+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:11:09.819073+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.819376+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.820090+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:11:09.820742+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.820884+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.821479+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.821613+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T13:11:09.822035+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.822174+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.823780+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.824201+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.824955+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T13:11:09.828329+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T13:11:09.828480+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T13:11:09.828874+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T13:11:09.845324+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:24:59.725636+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:24:59.733442+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:25:28.155761+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T14:25:28.173419+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ride_user {"sql":"DELETE FROM ride_user"} []
[2025-07-16T14:25:28.182451+00:00] doctrine.DEBUG: Executing statement: DELETE FROM avis {"sql":"DELETE FROM avis"} []
[2025-07-16T14:25:28.189323+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ride {"sql":"DELETE FROM ride"} []
[2025-07-16T14:25:28.193664+00:00] doctrine.DEBUG: Executing statement: DELETE FROM vehicle {"sql":"DELETE FROM vehicle"} []
[2025-07-16T14:25:28.195544+00:00] doctrine.DEBUG: Executing statement: DELETE FROM user {"sql":"DELETE FROM user"} []
[2025-07-16T14:25:28.198922+00:00] doctrine.DEBUG: Executing statement: DELETE FROM suspended_user {"sql":"DELETE FROM suspended_user"} []
[2025-07-16T14:25:28.695130+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-16T14:25:28.701326+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"admin@ecoride.local","2":"$2y$13$s2Rvk5qBSpPAHtuoF/otJeczHJZwVGNhMYMiACNT1RBQMFwoN9XQG","3":"Admin","4":"[\"ROLE_ADMIN\"]","5":"NO","6":20,"7":"[]","8":"2025-07-16 14:25:28","9":null,"10":null,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"admin@ecoride.local","2":"$2y$13$s2Rvk5qBSpPAHtuoF/otJeczHJZwVGNhMYMiACNT1RBQMFwoN9XQG","3":"Admin","4":"[\"ROLE_ADMIN\"]","5":"NO","6":20,"7":"[]","8":"2025-07-16 14:25:28","9":null,"10":null,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T14:25:28.706861+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-16T14:25:28.710089+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T14:25:28.711748+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:27:08.734532+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://localhost:8000/api/login","method":"POST"} []
[2025-07-16T14:27:08.754318+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2025-07-16T14:27:08.754390+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T14:27:08.758607+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "Invalid JSON." at JsonLoginAuthenticator.php line 84 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): Invalid JSON. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php:84)"} []
[2025-07-16T14:28:22.019333+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:28:22.023985+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:28:22.027253+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T14:28:22.042032+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ride_user {"sql":"DELETE FROM ride_user"} []
[2025-07-16T14:28:22.042996+00:00] doctrine.DEBUG: Executing statement: DELETE FROM avis {"sql":"DELETE FROM avis"} []
[2025-07-16T14:28:22.043343+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ride {"sql":"DELETE FROM ride"} []
[2025-07-16T14:28:22.043686+00:00] doctrine.DEBUG: Executing statement: DELETE FROM vehicle {"sql":"DELETE FROM vehicle"} []
[2025-07-16T14:28:22.043990+00:00] doctrine.DEBUG: Executing statement: DELETE FROM user {"sql":"DELETE FROM user"} []
[2025-07-16T14:28:22.044791+00:00] doctrine.DEBUG: Executing statement: DELETE FROM suspended_user {"sql":"DELETE FROM suspended_user"} []
[2025-07-16T14:28:22.536944+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-16T14:28:22.542098+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"admin@ecoride.local","2":"$2y$13$nZ0nbg4gmZkvmHqzHVeIYurLRDbWK0O37JY/3dlO2/4HsscQsZ9uO","3":"Admin","4":"[\"ROLE_ADMIN\"]","5":"NO","6":20,"7":"[]","8":"2025-07-16 14:28:22","9":null,"10":null,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"admin@ecoride.local","2":"$2y$13$nZ0nbg4gmZkvmHqzHVeIYurLRDbWK0O37JY/3dlO2/4HsscQsZ9uO","3":"Admin","4":"[\"ROLE_ADMIN\"]","5":"NO","6":20,"7":"[]","8":"2025-07-16 14:28:22","9":null,"10":null,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T14:28:22.543037+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-16T14:28:22.543419+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T14:28:22.544716+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:28:43.018599+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://localhost:8000/api/login","method":"POST"} []
[2025-07-16T14:28:43.039529+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2025-07-16T14:28:43.039596+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T14:28:43.043827+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "Invalid JSON." at JsonLoginAuthenticator.php line 84 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): Invalid JSON. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php:84)"} []
[2025-07-16T14:29:13.966413+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://localhost:8000/api/login","method":"POST"} []
[2025-07-16T14:29:13.967110+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2025-07-16T14:29:13.967138+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T14:29:13.967413+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "Invalid JSON." at JsonLoginAuthenticator.php line 84 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): Invalid JSON. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php:84)"} []
[2025-07-16T14:29:31.404922+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://localhost:8000/api/login","method":"POST"} []
[2025-07-16T14:29:31.405618+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2025-07-16T14:29:31.405653+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2025-07-16T14:29:31.424841+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:29:31.442020+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"admin@ecoride.local"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"admin@ecoride.local"},"types":{"1":2}} []
[2025-07-16T14:29:31.942652+00:00] deprecation.INFO: User Deprecated: Since symfony/security-http 7.3: Implementing "App\Entity\User::eraseCredentials()" is deprecated since Symfony 7.3; add the #[\Deprecated] attribute on the method to signal its either empty or that you moved the logic elsewhere, typically to the "__serialize()" method. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-http 7.3: Implementing \"App\\Entity\\User::eraseCredentials()\" is deprecated since Symfony 7.3; add the #[\\Deprecated] attribute on the method to signal its either empty or that you moved the logic elsewhere, typically to the \"__serialize()\" method. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/security-http/Authentication/AuthenticatorManager.php:321)"} []
[2025-07-16T14:29:31.943319+00:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"admin@ecoride.local\", roles=\"ROLE_ADMIN\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2025-07-16T14:29:31.961183+00:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2025-07-16T14:29:31.970064+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:32:39.781605+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:32:39.787334+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:32:41.219037+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:32:41.219794+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:32:41.224287+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:32:41.224653+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:32:41.227114+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:32:41.227449+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:32:41.228433+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:32:41.240486+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:32:41.240801+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:32:41.251342+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2025-07-16T14:32:41.251800+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:33:12.035787+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:33:12.040471+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.042111+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.043423+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.043629+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.046858+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.047070+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.049218+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.049431+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.050583+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:33:12.059650+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.059887+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.062686+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:12.064881+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.065060+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.066575+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.067144+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.068262+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.068392+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.070028+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.070140+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.070834+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:33:12.090888+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.095629+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.102644+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:12.104672+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.104859+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:12.115937+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.118196+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.119174+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:12.123106+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.139954+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:12.149391+00:00] doctrine.DEBUG: Executing statement: SELECT CHARACTER_SET_NAME FROM information_schema.COLLATIONS WHERE COLLATION_NAME = ?; (parameters: array{"1":"utf8mb4_bin"}, types: array{"1":2}) {"sql":"SELECT CHARACTER_SET_NAME\nFROM information_schema.COLLATIONS\nWHERE COLLATION_NAME = ?;","params":{"1":"utf8mb4_bin"},"types":{"1":2}} []
[2025-07-16T14:33:12.152495+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-07-16T14:33:12.154946+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:diff". Message: "No changes detected in your mapping information." {"exception":"[object] (Doctrine\\Migrations\\Generator\\Exception\\NoChangesDetected(code: 0): No changes detected in your mapping information. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Generator/Exception/NoChangesDetected.php:13)","command":"doctrine:migrations:diff","message":"No changes detected in your mapping information."} []
[2025-07-16T14:33:12.155114+00:00] console.DEBUG: Command "doctrine:migrations:diff" exited with code "1" {"command":"doctrine:migrations:diff","code":1} []
[2025-07-16T14:33:12.159749+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:33:52.408059+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:33:52.413337+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.415108+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:52.416905+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.417165+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:52.420317+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.420525+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.423045+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.423268+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.424658+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:33:52.433503+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.433719+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.436440+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:52.437863+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.438074+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:52.438828+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.438955+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:52.439561+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.439720+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.441181+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.441314+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.442062+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:33:52.449209+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.449391+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:52.450108+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:52.452477+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.469019+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:52.478694+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-07-16T14:33:52.481532+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:33:56.679113+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:33:56.681767+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:58.072908+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:58.074699+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:33:58.081724+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:58.082284+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:58.084069+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:58.084403+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:58.085549+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:33:58.104721+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:33:58.105535+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:33:58.114297+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:58.115800+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:58.116288+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:33:58.121721+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T14:33:58.123250+00:00] deprecation.INFO: User Deprecated: Since symfony/var-exporter 7.3: The "Symfony\Component\VarExporter\LazyProxyTrait" trait is deprecated, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/var-exporter 7.3: The \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" trait is deprecated, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/var-exporter/LazyProxyTrait.php:22)"} []
[2025-07-16T14:33:58.123658+00:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/error-handler/DebugClassLoader.php:347)"} []
[2025-07-16T14:33:58.124479+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, driver_id INT DEFAULT NULL, passenger_id INT DEFAULT NULL, ride_id INT DEFAULT NULL, rating INT NOT NULL, comment LONGTEXT DEFAULT NULL, status VARCHAR(255) DEFAULT NULL, token VARCHAR(255) DEFAULT NULL, is_validated TINYINT(1) NOT NULL, INDEX IDX_8F91ABF0C3423909 (driver_id), INDEX IDX_8F91ABF04502E565 (passenger_id), INDEX IDX_8F91ABF0302A8A70 (ride_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"    CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, driver_id INT DEFAULT NULL, passenger_id INT DEFAULT NULL, ride_id INT DEFAULT NULL, rating INT NOT NULL, comment LONGTEXT DEFAULT NULL, status VARCHAR(255) DEFAULT NULL, token VARCHAR(255) DEFAULT NULL, is_validated TINYINT(1) NOT NULL, INDEX IDX_8F91ABF0C3423909 (driver_id), INDEX IDX_8F91ABF04502E565 (passenger_id), INDEX IDX_8F91ABF0302A8A70 (ride_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-07-16T14:33:58.128877+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-16T14:33:58.130080+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 1050): An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:45)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1050): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists"} []
[2025-07-16T14:33:58.130249+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1050" {"command":"doctrine:migrations:migrate","code":1050} []
[2025-07-16T14:33:58.136153+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:35:52.567888+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:35:52.572565+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:52.574364+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:35:52.578024+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:52.578242+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:52.580340+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:52.580531+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:52.581590+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:35:52.591501+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:52.591736+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:52.600673+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T14:35:56.495253+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T14:35:56.497801+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:56.499308+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:56.499677+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-16T14:35:56.501834+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:56.501987+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:56.503019+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:56.503147+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:56.503739+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-16T14:35:56.511609+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-16T14:35:56.511899+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-16T14:35:56.516510+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:35:56.517137+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:35:56.517451+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-16T14:35:56.520902+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T14:35:56.522226+00:00] deprecation.INFO: User Deprecated: Since symfony/var-exporter 7.3: The "Symfony\Component\VarExporter\LazyProxyTrait" trait is deprecated, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/var-exporter 7.3: The \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" trait is deprecated, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/var-exporter/LazyProxyTrait.php:22)"} []
[2025-07-16T14:35:56.522545+00:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/error-handler/DebugClassLoader.php:347)"} []
[2025-07-16T14:35:56.523246+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, driver_id INT DEFAULT NULL, passenger_id INT DEFAULT NULL, ride_id INT DEFAULT NULL, rating INT NOT NULL, comment LONGTEXT DEFAULT NULL, status VARCHAR(255) DEFAULT NULL, token VARCHAR(255) DEFAULT NULL, is_validated TINYINT(1) NOT NULL, INDEX IDX_8F91ABF0C3423909 (driver_id), INDEX IDX_8F91ABF04502E565 (passenger_id), INDEX IDX_8F91ABF0302A8A70 (ride_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"    CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, driver_id INT DEFAULT NULL, passenger_id INT DEFAULT NULL, ride_id INT DEFAULT NULL, rating INT NOT NULL, comment LONGTEXT DEFAULT NULL, status VARCHAR(255) DEFAULT NULL, token VARCHAR(255) DEFAULT NULL, is_validated TINYINT(1) NOT NULL, INDEX IDX_8F91ABF0C3423909 (driver_id), INDEX IDX_8F91ABF04502E565 (passenger_id), INDEX IDX_8F91ABF0302A8A70 (ride_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-07-16T14:35:56.525640+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-16T14:35:56.526703+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate --no-interaction". Message: "An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 1050): An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:45)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1050): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate --no-interaction","message":"An exception occurred while executing a query: SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'avis' already exists"} []
[2025-07-16T14:35:56.526845+00:00] console.DEBUG: Command "doctrine:migrations:migrate --no-interaction" exited with code "1050" {"command":"doctrine:migrations:migrate --no-interaction","code":1050} []
[2025-07-16T14:35:56.529480+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T20:01:14.981409+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T20:01:15.003919+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0"} []
[2025-07-16T20:01:15.014280+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.brand AS brand_2, t0.model AS model_3, t0.is_electric AS is_electric_4, t0.plate_number AS plate_number_5, t0.owner_id AS owner_id_6 FROM vehicle t0 {"sql":"SELECT t0.id AS id_1, t0.brand AS brand_2, t0.model AS model_3, t0.is_electric AS is_electric_4, t0.plate_number AS plate_number_5, t0.owner_id AS owner_id_6 FROM vehicle t0"} []
[2025-07-16T20:01:15.017593+00:00] console.DEBUG: Command "create:test-rides" exited with code "1" {"command":"create:test-rides","code":1} []
[2025-07-16T20:01:15.017744+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T20:03:22.530038+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T20:03:23.506738+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T20:03:23.515495+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"ericdu19@test.com","2":"$2y$13$oRHFl488kGMchc7v.2EAOOH3JVVGsqIcBJqoRn6AnNkNfwhZBOtMa","3":"ericdu19","4":"[\"ROLE_DRIVER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 20:03:22","9":null,"10":null,"11":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"ericdu19@test.com","2":"$2y$13$oRHFl488kGMchc7v.2EAOOH3JVVGsqIcBJqoRn6AnNkNfwhZBOtMa","3":"ericdu19","4":"[\"ROLE_DRIVER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 20:03:22","9":null,"10":null,"11":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T20:03:23.525220+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"fabienne@test.com","2":"$2y$13$UllDnP83igBp.pQ7noSLyOyTRhXXi7H6igMS0NIaGryaYWmoUpqT6","3":"fabienne","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":true,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 20:03:23","9":null,"10":null,"11":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"fabienne@test.com","2":"$2y$13$UllDnP83igBp.pQ7noSLyOyTRhXXi7H6igMS0NIaGryaYWmoUpqT6","3":"fabienne","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":true,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 20:03:23","9":null,"10":null,"11":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T20:03:23.529195+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"kati@test.com","2":"$2y$13$0nP1IjmnpdXR1WHeGP.hP.SClZU9GGscpI7UaIPan.kDfFMA1wdmW","3":"kati9","4":"[\"ROLE_DRIVER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 20:03:23","9":null,"10":null,"11":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"kati@test.com","2":"$2y$13$0nP1IjmnpdXR1WHeGP.hP.SClZU9GGscpI7UaIPan.kDfFMA1wdmW","3":"kati9","4":"[\"ROLE_DRIVER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 20:03:23","9":null,"10":null,"11":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T20:03:23.534327+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T20:03:23.536331+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T21:00:34.752597+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T21:00:38.096773+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T21:00:38.103775+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"employee2@example.com","2":"$2y$13$y36z35vPmQT2Uxu6aQvbpeQfeUGUrpJ/q8SQEY5d2/iaqS2PjLvcG","3":"employee2","4":"[\"ROLE_EMPLOYEE\"]","5":"M","6":20,"7":"[]","8":"2025-07-16 21:00:34","9":"images/Profil_Employe.png","10":null,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"employee2@example.com","2":"$2y$13$y36z35vPmQT2Uxu6aQvbpeQfeUGUrpJ/q8SQEY5d2/iaqS2PjLvcG","3":"employee2","4":"[\"ROLE_EMPLOYEE\"]","5":"M","6":20,"7":"[]","8":"2025-07-16 21:00:34","9":"images/Profil_Employe.png","10":null,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.108704+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"driver1@example.com","2":"$2y$13$jNKuiFJz4sItfUkvJ.Zfhub4FdWeKg1hzNdDoje9qzKNxLDcFEKk2","3":"jerome","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:34","9":"images/Profil_Jerome.png","10":4.5,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"driver1@example.com","2":"$2y$13$jNKuiFJz4sItfUkvJ.Zfhub4FdWeKg1hzNdDoje9qzKNxLDcFEKk2","3":"jerome","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:34","9":"images/Profil_Jerome.png","10":4.5,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.109921+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"driver2@example.com","2":"$2y$13$RdSzWkV2LVN/IpZA1B92/.NEarbG9e1Oo4wEDbtxEKmpbL2OfyG82","3":"rosalie","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":true,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 21:00:35","9":"images/Profil_Passager-Conducteur.png","10":4.0,"11":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"driver2@example.com","2":"$2y$13$RdSzWkV2LVN/IpZA1B92/.NEarbG9e1Oo4wEDbtxEKmpbL2OfyG82","3":"rosalie","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":true,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 21:00:35","9":"images/Profil_Passager-Conducteur.png","10":4.0,"11":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.113506+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"driver3@example.com","2":"$2y$13$vAZW9Kr/X00LTyFTKjIAPetnDgti5nz4J3S7.dT6LJ9Ki67hV2m9K","3":"francky","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 21:00:35","9":"images/Profil_Francky.png","10":4.0,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"driver3@example.com","2":"$2y$13$vAZW9Kr/X00LTyFTKjIAPetnDgti5nz4J3S7.dT6LJ9Ki67hV2m9K","3":"francky","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"M","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":true,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":false}","8":"2025-07-16 21:00:35","9":"images/Profil_Francky.png","10":4.0,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.114005+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"driver4@example.com","2":"$2y$13$tmcejdGD4uImAq7IiWTuIOhceGAXETblfnUGFsFI7LZoDRm97iqzC","3":"kati","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:36","9":"images/Profil_Kati.png","10":5.0,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"driver4@example.com","2":"$2y$13$tmcejdGD4uImAq7IiWTuIOhceGAXETblfnUGFsFI7LZoDRm97iqzC","3":"kati","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:36","9":"images/Profil_Kati.png","10":5.0,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.114397+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"driver5@example.com","2":"$2y$13$CKqlzEXakkrom9jHFEW5pOjGSCuYFyTVp0P1aIOxAXVccbcF7H/ay","3":"anthony","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:36","9":"images/Profil_Anthony.png","10":5.0,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"driver5@example.com","2":"$2y$13$CKqlzEXakkrom9jHFEW5pOjGSCuYFyTVp0P1aIOxAXVccbcF7H/ay","3":"anthony","4":"[\"ROLE_DRIVER\",\"ROLE_USER\"]","5":"F","6":20,"7":"{\"V\\u00e9hicule non-fumeur\":false,\"Femmes uniquement\":false,\"Animal de compagnie autoris\\u00e9\":true}","8":"2025-07-16 21:00:36","9":"images/Profil_Anthony.png","10":5.0,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.114776+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"passenger@example.com","2":"$2y$13$OYTBYdtYtlumEW3sDE2nke0o5DFNYNQ3Buc17g0PYweT37b2YC1YW","3":"kati","4":"[\"ROLE_USER\"]","5":"F","6":20,"7":"[]","8":"2025-07-16 21:00:37","9":"images/Profil_Kati.png","10":5.0,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"passenger@example.com","2":"$2y$13$OYTBYdtYtlumEW3sDE2nke0o5DFNYNQ3Buc17g0PYweT37b2YC1YW","3":"kati","4":"[\"ROLE_USER\"]","5":"F","6":20,"7":"[]","8":"2025-07-16 21:00:37","9":"images/Profil_Kati.png","10":5.0,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.115134+00:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"passenger2@example.com","2":"$2y$13$G2SrJuPT7GUJAqYZeBKzKOOmCDvjnXS0jvzGj6M0UoSaCzwDCN86u","3":"alicia","4":"[\"ROLE_USER\"]","5":"F","6":20,"7":"[]","8":"2025-07-16 21:00:37","9":"images/Profil_Alicia.png","10":5.0,"11":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}) {"sql":"INSERT INTO user (email, password, pseudo, roles, gender, credits, driver_preferences, created_at, image, rating, is_verified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"passenger2@example.com","2":"$2y$13$G2SrJuPT7GUJAqYZeBKzKOOmCDvjnXS0jvzGj6M0UoSaCzwDCN86u","3":"alicia","4":"[\"ROLE_USER\"]","5":"F","6":20,"7":"[]","8":"2025-07-16 21:00:37","9":"images/Profil_Alicia.png","10":5.0,"11":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":2,"8":2,"9":2,"10":2,"11":5}} []
[2025-07-16T21:00:38.115471+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T21:00:38.116809+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T21:17:48.493577+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T21:17:48.508006+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"driver1@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"driver1@example.com"},"types":{"1":2}} []
[2025-07-16T21:17:48.517037+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"driver2@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"driver2@example.com"},"types":{"1":2}} []
[2025-07-16T21:17:48.518044+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"driver3@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"driver3@example.com"},"types":{"1":2}} []
[2025-07-16T21:17:48.518689+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"driver4@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"driver4@example.com"},"types":{"1":2}} []
[2025-07-16T21:17:48.519082+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"driver5@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"driver5@example.com"},"types":{"1":2}} []
[2025-07-16T21:17:48.524504+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T21:17:48.525813+00:00] doctrine.DEBUG: Executing statement: INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Toyota","2":"Corolla","3":0,"4":"ABC-123-EF","5":45}, types: array{"1":2,"2":2,"3":5,"4":2,"5":1}) {"sql":"INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"Toyota","2":"Corolla","3":0,"4":"ABC-123-EF","5":45},"types":{"1":2,"2":2,"3":5,"4":2,"5":1}} []
[2025-07-16T21:17:48.526995+00:00] doctrine.DEBUG: Executing statement: INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Peugeot","2":"208","3":0,"4":"GH-456-IJ","5":46}, types: array{"1":2,"2":2,"3":5,"4":2,"5":1}) {"sql":"INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"Peugeot","2":"208","3":0,"4":"GH-456-IJ","5":46},"types":{"1":2,"2":2,"3":5,"4":2,"5":1}} []
[2025-07-16T21:17:48.527471+00:00] doctrine.DEBUG: Executing statement: INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Tesla","2":"Model 3","3":1,"4":"EV-789-KL","5":47}, types: array{"1":2,"2":2,"3":5,"4":2,"5":1}) {"sql":"INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"Tesla","2":"Model 3","3":1,"4":"EV-789-KL","5":47},"types":{"1":2,"2":2,"3":5,"4":2,"5":1}} []
[2025-07-16T21:17:48.538062+00:00] doctrine.DEBUG: Executing statement: INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Renault","2":"Clio","3":0,"4":"MN-012-OP","5":48}, types: array{"1":2,"2":2,"3":5,"4":2,"5":1}) {"sql":"INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"Renault","2":"Clio","3":0,"4":"MN-012-OP","5":48},"types":{"1":2,"2":2,"3":5,"4":2,"5":1}} []
[2025-07-16T21:17:48.538687+00:00] doctrine.DEBUG: Executing statement: INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Volkswagen","2":"ID 3","3":1,"4":"VW-333-ID3","5":49}, types: array{"1":2,"2":2,"3":5,"4":2,"5":1}) {"sql":"INSERT INTO vehicle (brand, model, is_electric, plate_number, owner_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"Volkswagen","2":"ID 3","3":1,"4":"VW-333-ID3","5":49},"types":{"1":2,"2":2,"3":5,"4":2,"5":1}} []
[2025-07-16T21:17:48.538956+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T21:17:48.540406+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T21:24:44.248616+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T21:24:44.259882+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0"} []
[2025-07-16T21:24:44.269374+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.brand AS brand_2, t0.model AS model_3, t0.is_electric AS is_electric_4, t0.plate_number AS plate_number_5, t0.owner_id AS owner_id_6 FROM vehicle t0 {"sql":"SELECT t0.id AS id_1, t0.brand AS brand_2, t0.model AS model_3, t0.is_electric AS is_electric_4, t0.plate_number AS plate_number_5, t0.owner_id AS owner_id_6 FROM vehicle t0"} []
[2025-07-16T21:24:44.274828+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T21:24:44.276411+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Lille","3":"2025-07-16 21:24:44","4":1,"5":5.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":46,"10":7}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Lille","3":"2025-07-16 21:24:44","4":1,"5":5.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":46,"10":7},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.280510+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Grenoble","3":"2025-07-17 21:24:44","4":1,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Grenoble","3":"2025-07-17 21:24:44","4":1,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.281065+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Toulouse","3":"2025-07-18 21:24:44","4":5,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":49,"10":10}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Toulouse","3":"2025-07-18 21:24:44","4":5,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":49,"10":10},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.292249+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Rennes","3":"2025-07-19 21:24:44","4":1,"5":5.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":46,"10":7}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Rennes","3":"2025-07-19 21:24:44","4":1,"5":5.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":46,"10":7},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.294480+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Nice","2":"Marseille","3":"2025-07-20 21:24:44","4":3,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":47,"10":8}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Nice","2":"Marseille","3":"2025-07-20 21:24:44","4":3,"5":6.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":47,"10":8},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.300749+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Amiens","2":"Rouen","3":"2025-07-21 21:24:44","4":4,"5":4.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Amiens","2":"Rouen","3":"2025-07-21 21:24:44","4":4,"5":4.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.303143+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Dijon","2":"Strasbourg","3":"2025-07-22 21:24:44","4":3,"5":5.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":47,"10":8}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Dijon","2":"Strasbourg","3":"2025-07-22 21:24:44","4":3,"5":5.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":47,"10":8},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.303721+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Tours","2":"Orléans","3":"2025-07-23 21:24:44","4":2,"5":4.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Tours","2":"Orléans","3":"2025-07-23 21:24:44","4":2,"5":4.0,"6":5,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.304508+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Avignon","2":"Montpellier","3":"2025-07-24 21:24:44","4":1,"5":6.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":49,"10":10}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Avignon","2":"Montpellier","3":"2025-07-24 21:24:44","4":1,"5":6.0,"6":3,"7":"Trajet convivial avec pauses","8":"en cours","9":49,"10":10},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.304862+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Clermont-Ferrand","2":"Saint-Étienne","3":"2025-07-25 21:24:44","4":3,"5":6.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6}, types: array{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}) {"sql":"INSERT INTO ride (departure, arrival, date, available_seats, price, initial_seats, extras, status, driver_id, vehicle_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Clermont-Ferrand","2":"Saint-Étienne","3":"2025-07-25 21:24:44","4":3,"5":6.0,"6":4,"7":"Trajet convivial avec pauses","8":"en cours","9":45,"10":6},"types":{"1":2,"2":2,"3":2,"4":1,"5":2,"6":1,"7":2,"8":2,"9":1,"10":1}} []
[2025-07-16T21:24:44.306741+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":25,"2":49}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":25,"2":49},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.307794+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":26,"2":49}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":26,"2":49},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.308004+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":27,"2":51}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":27,"2":51},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.308178+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":28,"2":45}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":28,"2":45},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.308507+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":29,"2":48}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":29,"2":48},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.308715+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":29,"2":46}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":29,"2":46},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.308878+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":30,"2":51}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":30,"2":51},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309025+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":30,"2":46}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":30,"2":46},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309177+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":31,"2":49}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":31,"2":49},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309322+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":31,"2":48}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":31,"2":48},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309530+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":32,"2":46}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":32,"2":46},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309662+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":32,"2":49}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":32,"2":49},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309799+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":33,"2":51}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":33,"2":51},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.309931+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":34,"2":48}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":34,"2":48},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.310062+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?) (parameters: array{"1":34,"2":47}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO ride_user (ride_id, user_id) VALUES (?, ?)","params":{"1":34,"2":47},"types":{"1":1,"2":1}} []
[2025-07-16T21:24:44.310199+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T21:24:44.311293+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-16T21:33:06.518872+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-16T21:33:06.534266+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.departure AS departure_2, t0.arrival AS arrival_3, t0.date AS date_4, t0.available_seats AS available_seats_5, t0.price AS price_6, t0.initial_seats AS initial_seats_7, t0.extras AS extras_8, t0.status AS status_9, t0.driver_id AS driver_id_10, t0.vehicle_id AS vehicle_id_11 FROM ride t0 {"sql":"SELECT t0.id AS id_1, t0.departure AS departure_2, t0.arrival AS arrival_3, t0.date AS date_4, t0.available_seats AS available_seats_5, t0.price AS price_6, t0.initial_seats AS initial_seats_7, t0.extras AS extras_8, t0.status AS status_9, t0.driver_id AS driver_id_10, t0.vehicle_id AS vehicle_id_11 FROM ride t0"} []
[2025-07-16T21:33:06.542371+00:00] deprecation.INFO: User Deprecated: Since symfony/var-exporter 7.3: Using ProxyHelper::generateLazyGhost() is deprecated, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/var-exporter 7.3: Using ProxyHelper::generateLazyGhost() is deprecated, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/var-exporter/ProxyHelper.php:34)"} []
[2025-07-16T21:33:06.545083+00:00] deprecation.INFO: User Deprecated: Since symfony/var-exporter 7.3: Using ProxyHelper::generateLazyGhost() is deprecated, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/var-exporter 7.3: Using ProxyHelper::generateLazyGhost() is deprecated, use native lazy objects instead. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/symfony/var-exporter/ProxyHelper.php:34)"} []
[2025-07-16T21:33:06.546968+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.pseudo AS pseudo_4, t0.roles AS roles_5, t0.gender AS gender_6, t0.credits AS credits_7, t0.driver_preferences AS driver_preferences_8, t0.created_at AS created_at_9, t0.image AS image_10, t0.rating AS rating_11, t0.is_verified AS is_verified_12 FROM user t0"} []
[2025-07-16T21:33:06.554539+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-16T21:33:06.556241+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"117e9f0dee2682b6","5":0,"6":46,"7":45,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"117e9f0dee2682b6","5":0,"6":46,"7":45,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.560638+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"refusé","4":"7d353584e102cde4","5":0,"6":46,"7":47,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"refusé","4":"7d353584e102cde4","5":0,"6":46,"7":47,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.561452+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"bbc29648bbdebabc","5":1,"6":46,"7":48,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"bbc29648bbdebabc","5":1,"6":46,"7":48,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.568961+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"en attente","4":"bb26de9c2089698f","5":0,"6":46,"7":49,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"en attente","4":"bb26de9c2089698f","5":0,"6":46,"7":49,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.569474+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"2f0607cb1c14c490","5":0,"6":46,"7":50,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"2f0607cb1c14c490","5":0,"6":46,"7":50,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.569773+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"validé","4":"306991522604ac72","5":1,"6":46,"7":51,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"validé","4":"306991522604ac72","5":1,"6":46,"7":51,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.570040+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Super trajet !","3":"refusé","4":"17abb1a76da62161","5":1,"6":45,"7":46,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Super trajet !","3":"refusé","4":"17abb1a76da62161","5":1,"6":45,"7":46,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.570279+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"en attente","4":"f72508f018eaa4fa","5":0,"6":45,"7":47,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"en attente","4":"f72508f018eaa4fa","5":0,"6":45,"7":47,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.570529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"en attente","4":"9e023ed64e836819","5":1,"6":45,"7":48,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"en attente","4":"9e023ed64e836819","5":1,"6":45,"7":48,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.570758+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"à traiter","4":"b16c5132364a9e79","5":0,"6":45,"7":49,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"à traiter","4":"b16c5132364a9e79","5":0,"6":45,"7":49,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.570996+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"en attente","4":"a0ed652d8fe8e29e","5":0,"6":45,"7":50,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"en attente","4":"a0ed652d8fe8e29e","5":0,"6":45,"7":50,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.571516+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Un peu de retard.","3":"à traiter","4":"8a340cee1849aa6e","5":0,"6":45,"7":51,"8":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Un peu de retard.","3":"à traiter","4":"8a340cee1849aa6e","5":0,"6":45,"7":51,"8":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.571726+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"f2f5c2046b3792e1","5":0,"6":49,"7":45,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"f2f5c2046b3792e1","5":0,"6":49,"7":45,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.571904+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"à traiter","4":"48e93fbb40f86904","5":0,"6":49,"7":46,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"à traiter","4":"48e93fbb40f86904","5":0,"6":49,"7":46,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.572077+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"a2e7a3359102175d","5":1,"6":49,"7":47,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Conduite agréable.","3":"à traiter","4":"a2e7a3359102175d","5":1,"6":49,"7":47,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.572252+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"validé","4":"763c7facbf203899","5":0,"6":49,"7":48,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"validé","4":"763c7facbf203899","5":0,"6":49,"7":48,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.572665+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"validé","4":"33e6743dfb713a3b","5":0,"6":49,"7":50,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"validé","4":"33e6743dfb713a3b","5":0,"6":49,"7":50,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.572836+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Super trajet !","3":"validé","4":"953ef8e0ddcda438","5":0,"6":49,"7":51,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Super trajet !","3":"validé","4":"953ef8e0ddcda438","5":0,"6":49,"7":51,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573001+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"f87131f5a3c50fec","5":1,"6":46,"7":45,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"f87131f5a3c50fec","5":1,"6":46,"7":45,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573169+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"à traiter","4":"dc013bfb44dbe4d0","5":1,"6":46,"7":47,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"à traiter","4":"dc013bfb44dbe4d0","5":1,"6":46,"7":47,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573333+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Conduite agréable.","3":"validé","4":"4da8a10d66a3c33d","5":1,"6":46,"7":48,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Conduite agréable.","3":"validé","4":"4da8a10d66a3c33d","5":1,"6":46,"7":48,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573496+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"validé","4":"530541774512c853","5":1,"6":46,"7":49,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"validé","4":"530541774512c853","5":1,"6":46,"7":49,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"37c970c1d98a5de0","5":1,"6":46,"7":50,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"37c970c1d98a5de0","5":1,"6":46,"7":50,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573825+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Un peu de retard.","3":"validé","4":"f6511bc74356f4dc","5":0,"6":46,"7":51,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Un peu de retard.","3":"validé","4":"f6511bc74356f4dc","5":0,"6":46,"7":51,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.573994+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"validé","4":"56e0f42ed8f92e50","5":1,"6":47,"7":45,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"validé","4":"56e0f42ed8f92e50","5":1,"6":47,"7":45,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574159+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Un peu de retard.","3":"validé","4":"b5a8675cfe392a8a","5":0,"6":47,"7":46,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Un peu de retard.","3":"validé","4":"b5a8675cfe392a8a","5":0,"6":47,"7":46,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574320+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"validé","4":"c9194e31b2e46a56","5":0,"6":47,"7":48,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"validé","4":"c9194e31b2e46a56","5":0,"6":47,"7":48,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574481+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"en attente","4":"7d40490809d25b36","5":0,"6":47,"7":49,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"en attente","4":"7d40490809d25b36","5":0,"6":47,"7":49,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574646+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Un peu de retard.","3":"refusé","4":"d24baec47b870584","5":0,"6":47,"7":50,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Un peu de retard.","3":"refusé","4":"d24baec47b870584","5":0,"6":47,"7":50,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574809+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"919ff573dbe38667","5":0,"6":47,"7":51,"8":29}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"919ff573dbe38667","5":0,"6":47,"7":51,"8":29},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.574980+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"refusé","4":"1865d09837682a9e","5":1,"6":45,"7":46,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"refusé","4":"1865d09837682a9e","5":1,"6":45,"7":46,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.575159+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Conduite agréable.","3":"validé","4":"364b64bac2dcd6e1","5":0,"6":45,"7":47,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Conduite agréable.","3":"validé","4":"364b64bac2dcd6e1","5":0,"6":45,"7":47,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.575830+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"validé","4":"6ffc715340e97758","5":0,"6":45,"7":48,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"validé","4":"6ffc715340e97758","5":0,"6":45,"7":48,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.576142+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Super trajet !","3":"validé","4":"4a36b43f78378969","5":1,"6":45,"7":49,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Super trajet !","3":"validé","4":"4a36b43f78378969","5":1,"6":45,"7":49,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.576421+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"validé","4":"a4da8ba7a52c5160","5":1,"6":45,"7":50,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"validé","4":"a4da8ba7a52c5160","5":1,"6":45,"7":50,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.576702+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"refusé","4":"30cf267714cce560","5":0,"6":45,"7":51,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"refusé","4":"30cf267714cce560","5":0,"6":45,"7":51,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.576971+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"d115d8f85d72e2dd","5":0,"6":47,"7":45,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Conduite agréable.","3":"à traiter","4":"d115d8f85d72e2dd","5":0,"6":47,"7":45,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.577293+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet !","3":"refusé","4":"0fc28b47d3d8fde4","5":1,"6":47,"7":46,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet !","3":"refusé","4":"0fc28b47d3d8fde4","5":1,"6":47,"7":46,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.577571+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"à traiter","4":"ab1cc01104164d9b","5":1,"6":47,"7":48,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"à traiter","4":"ab1cc01104164d9b","5":1,"6":47,"7":48,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.577871+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"validé","4":"25481ace05513786","5":0,"6":47,"7":49,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"validé","4":"25481ace05513786","5":0,"6":47,"7":49,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.578604+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"à traiter","4":"8dbaf558b70351b8","5":1,"6":47,"7":50,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"à traiter","4":"8dbaf558b70351b8","5":1,"6":47,"7":50,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.579108+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"refusé","4":"b41f5564853d68ff","5":1,"6":47,"7":51,"8":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"refusé","4":"b41f5564853d68ff","5":1,"6":47,"7":51,"8":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.579496+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"cbca9997d34d0f90","5":0,"6":45,"7":46,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"cbca9997d34d0f90","5":0,"6":45,"7":46,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.579781+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"validé","4":"11eeb7b43b99d34d","5":1,"6":45,"7":47,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"validé","4":"11eeb7b43b99d34d","5":1,"6":45,"7":47,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.580027+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"refusé","4":"b6de7d6459849ddb","5":1,"6":45,"7":48,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"refusé","4":"b6de7d6459849ddb","5":1,"6":45,"7":48,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.580292+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"fde47d038541eb96","5":0,"6":45,"7":49,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Conduite agréable.","3":"à traiter","4":"fde47d038541eb96","5":0,"6":45,"7":49,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.580518+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Un peu de retard.","3":"validé","4":"894d746772f35df7","5":0,"6":45,"7":50,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Un peu de retard.","3":"validé","4":"894d746772f35df7","5":0,"6":45,"7":50,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.580737+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Un peu de retard.","3":"à traiter","4":"ec508252803768e1","5":0,"6":45,"7":51,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Un peu de retard.","3":"à traiter","4":"ec508252803768e1","5":0,"6":45,"7":51,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.580953+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Super trajet !","3":"refusé","4":"7f9603e5976ba999","5":0,"6":49,"7":45,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Super trajet !","3":"refusé","4":"7f9603e5976ba999","5":0,"6":49,"7":45,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.581173+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Un peu de retard.","3":"validé","4":"3410e9a6e78ed7a4","5":1,"6":49,"7":46,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Un peu de retard.","3":"validé","4":"3410e9a6e78ed7a4","5":1,"6":49,"7":46,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.581393+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Un peu de retard.","3":"refusé","4":"6be01ce3b93b5f66","5":0,"6":49,"7":47,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Un peu de retard.","3":"refusé","4":"6be01ce3b93b5f66","5":0,"6":49,"7":47,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.581605+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"en attente","4":"69f5fa69c4de2022","5":0,"6":49,"7":48,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"en attente","4":"69f5fa69c4de2022","5":0,"6":49,"7":48,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.581822+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"a203d9f2f1054b9f","5":1,"6":49,"7":50,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Bonne ambiance.","3":"refusé","4":"a203d9f2f1054b9f","5":1,"6":49,"7":50,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.582033+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Conduite agréable.","3":"validé","4":"5cb25831a639e2e4","5":1,"6":49,"7":51,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Conduite agréable.","3":"validé","4":"5cb25831a639e2e4","5":1,"6":49,"7":51,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.582246+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"validé","4":"b6cbcee554defd32","5":0,"6":45,"7":46,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"validé","4":"b6cbcee554defd32","5":0,"6":45,"7":46,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.582459+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Conduite agréable.","3":"refusé","4":"9eae94e1d6ad864b","5":1,"6":45,"7":47,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Conduite agréable.","3":"refusé","4":"9eae94e1d6ad864b","5":1,"6":45,"7":47,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.582672+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"refusé","4":"29b15eb2c4fb3624","5":1,"6":45,"7":48,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"refusé","4":"29b15eb2c4fb3624","5":1,"6":45,"7":48,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.582885+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Bonne ambiance.","3":"validé","4":"ce90cc9e83c3ccb6","5":0,"6":45,"7":49,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Bonne ambiance.","3":"validé","4":"ce90cc9e83c3ccb6","5":0,"6":45,"7":49,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.583157+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Super trajet !","3":"validé","4":"0fbb93b4ef7f4615","5":0,"6":45,"7":50,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Super trajet !","3":"validé","4":"0fbb93b4ef7f4615","5":0,"6":45,"7":50,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.583405+00:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Bonne ambiance.","3":"en attente","4":"81b28f25b63de8ca","5":1,"6":45,"7":51,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO avis (rating, comment, status, token, is_validated, driver_id, passenger_id, ride_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Bonne ambiance.","3":"en attente","4":"81b28f25b63de8ca","5":1,"6":45,"7":51,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":5,"6":1,"7":1,"8":1}} []
[2025-07-16T21:33:06.583592+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-16T21:33:06.585036+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:47:50.807891+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:47:50.814001+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:47:50.828604+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:47:50.850186+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:47:50.850374+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:47:50.855397+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:47:50.855577+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:47:50.861195+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:47:50.861376+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:47:50.862857+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:47:50.870038+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:47:50.870221+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:47:50.875429+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:diff". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Exception/MetadataStorageError.php:13)","command":"doctrine:migrations:diff","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-07-18T19:47:50.875723+00:00] console.DEBUG: Command "doctrine:migrations:diff" exited with code "1" {"command":"doctrine:migrations:diff","code":1} []
[2025-07-18T19:47:50.880869+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:49:06.436398+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:49:06.441668+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:06.443545+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:49:06.448482+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:06.448675+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:06.452532+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:06.452731+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:06.455148+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:49:06.462263+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:06.462504+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:06.465500+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE executed_at executed_at DATETIME DEFAULT NULL {"sql":"ALTER TABLE doctrine_migration_versions CHANGE executed_at executed_at DATETIME DEFAULT NULL"} []
[2025-07-18T19:49:06.495290+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-18T19:49:06.503906+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:49:11.048137+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:49:11.050988+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:11.052016+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:49:11.053871+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:11.054087+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:49:11.056622+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:11.056872+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:11.059202+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:11.059423+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:11.060880+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:49:11.066725+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:49:11.067010+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:49:11.070238+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:diff". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Exception/MetadataStorageError.php:13)","command":"doctrine:migrations:diff","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-07-18T19:49:11.070345+00:00] console.DEBUG: Command "doctrine:migrations:diff" exited with code "1" {"command":"doctrine:migrations:diff","code":1} []
[2025-07-18T19:49:11.072448+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:50:57.230537+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:50:57.236368+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:50:57.238495+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:50:57.240910+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:50:57.241119+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:50:57.245374+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:50:57.245620+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:50:57.249869+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:50:57.250065+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:50:57.252486+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:50:57.262916+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:50:57.263175+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:50:57.269137+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:version --add --all". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Exception/MetadataStorageError.php:13)","command":"doctrine:migrations:version --add --all","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-07-18T19:50:57.269339+00:00] console.DEBUG: Command "doctrine:migrations:version --add --all" exited with code "1" {"command":"doctrine:migrations:version --add --all","code":1} []
[2025-07-18T19:50:57.274149+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:51:08.864651+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:51:08.868478+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:08.870315+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:51:08.878759+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:08.878910+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:08.879946+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:08.880080+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:08.881002+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:51:08.887944+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:08.888191+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:08.891069+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE executed_at executed_at DATETIME DEFAULT NULL {"sql":"ALTER TABLE doctrine_migration_versions CHANGE executed_at executed_at DATETIME DEFAULT NULL"} []
[2025-07-18T19:51:08.908095+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-18T19:51:08.913536+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:51:15.291600+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:51:15.295107+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:15.296767+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:51:15.298295+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:15.298513+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:51:15.301680+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:15.301886+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:15.303899+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:15.304137+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:15.305423+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:51:15.313451+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:15.313726+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:15.317971+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:diff". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Exception/MetadataStorageError.php:13)","command":"doctrine:migrations:diff","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-07-18T19:51:15.318172+00:00] console.DEBUG: Command "doctrine:migrations:diff" exited with code "1" {"command":"doctrine:migrations:diff","code":1} []
[2025-07-18T19:51:15.321069+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-18T19:51:32.829149+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"16.9","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","charset":"utf8mb4"}} []
[2025-07-18T19:51:32.833921+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:32.835840+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:51:32.837325+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:32.837515+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-07-18T19:51:32.840808+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:32.841031+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:32.843669+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:32.843846+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:32.844915+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-07-18T19:51:32.851890+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-07-18T19:51:32.852132+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-07-18T19:51:32.856790+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:version --add --all". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at /Users/zoecinetique/Desktop/EcoRide/ecorideproject/backend/vendor/doctrine/migrations/src/Exception/MetadataStorageError.php:13)","command":"doctrine:migrations:version --add --all","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-07-18T19:51:32.857015+00:00] console.DEBUG: Command "doctrine:migrations:version --add --all" exited with code "1" {"command":"doctrine:migrations:version --add --all","code":1} []
[2025-07-18T19:51:32.860285+00:00] doctrine.INFO: Disconnecting [] []
