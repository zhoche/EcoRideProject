<?php

namespace ContainerYejZbx5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLexikJwtAuthentication_JwtManagerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'lexik_jwt_authentication.jwt_manager' shared service.
     *
     * @return \Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['lexik_jwt_authentication.jwt_manager'])) {
            return $container->services['lexik_jwt_authentication.jwt_manager'];
        }

        return $container->services['lexik_jwt_authentication.jwt_manager'] = new \Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager(($container->services['lexik_jwt_authentication.encoder'] ?? $container->load('getLexikJwtAuthentication_EncoderService')), $a, 'username', new \Lexik\Bundle\JWTAuthenticationBundle\Services\PayloadEnrichment\ChainEnrichment([]));
    }
}
