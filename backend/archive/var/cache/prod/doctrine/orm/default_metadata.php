<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Avis__CLASSMETADATA__' => 0,
'App__Entity__Ride__CLASSMETADATA__' => 1,
'App__Entity__SuspendedUser__CLASSMETADATA__' => 2,
'App__Entity__User__CLASSMETADATA__' => 3,
'App__Entity__Vehicle__CLASSMETADATA__' => 4,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Avis',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AvisRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'rating' => $o[2],
                        'comment' => $o[3],
                        'status' => $o[4],
                        'token' => $o[5],
                        'isValidated' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'rating' => 'rating',
                        'comment' => 'comment',
                        'status' => 'status',
                        'token' => 'token',
                        'is_validated' => 'isValidated',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'rating' => 'rating',
                        'comment' => 'comment',
                        'status' => 'status',
                        'token' => 'token',
                        'isValidated' => 'is_validated',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'avis',
                    ],
                ],
                'associationMappings' => [
                    [
                        'driver' => $o[7],
                        'passenger' => $o[9],
                        'ride' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[13],
                ],
                'name' => [
                    'App\\Entity\\Avis',
                    8 => 'driver_id',
                    10 => 'passenger_id',
                    12 => 'ride_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                    'text',
                    'string',
                    'string',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'rating',
                    'comment',
                    'status',
                    'token',
                    'isValidated',
                ],
                'columnName' => [
                    1 => 'id',
                    'rating',
                    'comment',
                    'status',
                    'token',
                    'is_validated',
                ],
                'nullable' => [
                    3 => true,
                    true,
                    true,
                    8 => true,
                    10 => true,
                    12 => true,
                ],
                'length' => [
                    4 => 255,
                    255,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                    11 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Avis',
                    9 => 'App\\Entity\\Avis',
                    11 => 'App\\Entity\\Avis',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'driver_id' => 'id',
                    ],
                    9 => [
                        'passenger_id' => 'id',
                    ],
                    11 => [
                        'ride_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'driver_id',
                    ],
                    9 => [
                        'id' => 'passenger_id',
                    ],
                    11 => [
                        'id' => 'ride_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                    11 => [
                        $o[12],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'driver_id' => 'driver_id',
                    ],
                    9 => [
                        'passenger_id' => 'passenger_id',
                    ],
                    11 => [
                        'ride_id' => 'ride_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                    10 => false,
                    12 => false,
                ],
                'onDelete' => [
                    8 => 'SET NULL',
                    10 => 'SET NULL',
                    12 => 'SET NULL',
                ],
                'referencedColumnName' => [
                    8 => 'id',
                    10 => 'id',
                    12 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'driver',
                    9 => 'passenger',
                    11 => 'ride',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\User',
                    11 => 'App\\Entity\\Ride',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Ride',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RideRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'departure' => $o[2],
                        'arrival' => $o[3],
                        'date' => $o[4],
                        'availableSeats' => $o[5],
                        'price' => $o[6],
                        'initialSeats' => $o[7],
                        'extras' => $o[8],
                        'status' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'departure' => 'departure',
                        'arrival' => 'arrival',
                        'date' => 'date',
                        'available_seats' => 'availableSeats',
                        'price' => 'price',
                        'initial_seats' => 'initialSeats',
                        'extras' => 'extras',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'departure' => 'departure',
                        'arrival' => 'arrival',
                        'date' => 'date',
                        'availableSeats' => 'available_seats',
                        'price' => 'price',
                        'initialSeats' => 'initial_seats',
                        'extras' => 'extras',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ride',
                    ],
                ],
                'associationMappings' => [
                    [
                        'driver' => $o[10],
                        'vehicle' => $o[12],
                        'passengers' => $o[14],
                    ],
                ],
                'idGenerator' => [
                    $o[18],
                ],
                'name' => [
                    'App\\Entity\\Ride',
                    11 => 'driver_id',
                    13 => 'vehicle_id',
                    15 => 'ride_user',
                    'ride_id',
                    'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'datetime',
                    'integer',
                    'float',
                    'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'departure',
                    'arrival',
                    'date',
                    'availableSeats',
                    'price',
                    'initialSeats',
                    'extras',
                    'status',
                ],
                'columnName' => [
                    1 => 'id',
                    'departure',
                    'arrival',
                    'date',
                    'available_seats',
                    'price',
                    'initial_seats',
                    'extras',
                    'status',
                ],
                'length' => [
                    2 => 255,
                    255,
                    8 => 255,
                    20,
                ],
                'nullable' => [
                    8 => true,
                    11 => false,
                    13 => false,
                ],
                'options' => [
                    9 => [
                        'default' => 'en cours',
                    ],
                ],
                'fetch' => [
                    10 => 2,
                    12 => 2,
                    14 => 2,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\Ride',
                    12 => 'App\\Entity\\Ride',
                    14 => 'App\\Entity\\Ride',
                ],
                'inversedBy' => [
                    10 => 'ridesAsDriver',
                    14 => 'ridesAsPassenger',
                ],
                'sourceToTargetKeyColumns' => [
                    10 => [
                        'driver_id' => 'id',
                    ],
                    12 => [
                        'vehicle_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    10 => [
                        'id' => 'driver_id',
                    ],
                    12 => [
                        'id' => 'vehicle_id',
                    ],
                ],
                'joinColumns' => [
                    10 => [
                        $o[11],
                    ],
                    12 => [
                        $o[13],
                    ],
                    15 => [
                        $o[16],
                    ],
                ],
                'joinColumnFieldNames' => [
                    10 => [
                        'driver_id' => 'driver_id',
                    ],
                    12 => [
                        'vehicle_id' => 'vehicle_id',
                    ],
                ],
                'unique' => [
                    11 => false,
                    13 => false,
                ],
                'referencedColumnName' => [
                    11 => 'id',
                    13 => 'id',
                    16 => 'id',
                    'id',
                ],
                'isOnDeleteCascade' => [
                    14 => true,
                ],
                'joinTable' => [
                    14 => $o[15],
                ],
                'joinTableColumns' => [
                    14 => [
                        'ride_id',
                        'user_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    14 => [
                        'ride_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    14 => [
                        'user_id' => 'id',
                    ],
                ],
                'inverseJoinColumns' => [
                    15 => [
                        $o[17],
                    ],
                ],
                'onDelete' => [
                    16 => 'CASCADE',
                    'CASCADE',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'driver',
                    12 => 'vehicle',
                    14 => 'passengers',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\User',
                    12 => 'App\\Entity\\Vehicle',
                    14 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\SuspendedUser',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SuspendedUserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'pseudo' => $o[3],
                        'role' => $o[4],
                        'suspendedAt' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'pseudo' => 'pseudo',
                        'role' => 'role',
                        'suspended_at' => 'suspendedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'pseudo' => 'pseudo',
                        'role' => 'role',
                        'suspendedAt' => 'suspended_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'suspended_user',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\SuspendedUser',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'pseudo',
                    'role',
                    'suspendedAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'pseudo',
                    'role',
                    'suspended_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'password' => $o[3],
                        'pseudo' => $o[4],
                        'roles' => $o[5],
                        'gender' => $o[6],
                        'credits' => $o[7],
                        'driverPreferences' => $o[8],
                        'createdAt' => $o[9],
                        'image' => $o[10],
                        'rating' => $o[11],
                        'isVerified' => $o[12],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'password' => 'password',
                        'pseudo' => 'pseudo',
                        'roles' => 'roles',
                        'gender' => 'gender',
                        'credits' => 'credits',
                        'driver_preferences' => 'driverPreferences',
                        'created_at' => 'createdAt',
                        'image' => 'image',
                        'rating' => 'rating',
                        'is_verified' => 'isVerified',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'password' => 'password',
                        'pseudo' => 'pseudo',
                        'roles' => 'roles',
                        'gender' => 'gender',
                        'credits' => 'credits',
                        'driverPreferences' => 'driver_preferences',
                        'createdAt' => 'created_at',
                        'image' => 'image',
                        'rating' => 'rating',
                        'isVerified' => 'is_verified',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'setCreatedAtValue',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'vehicles' => $o[13],
                        'ridesAsDriver' => $o[14],
                        'ridesAsPassenger' => $o[15],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'json',
                    'string',
                    'integer',
                    'json',
                    'datetime',
                    'string',
                    'float',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'password',
                    'pseudo',
                    'roles',
                    'gender',
                    'credits',
                    'driverPreferences',
                    'createdAt',
                    'image',
                    'rating',
                    'isVerified',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'password',
                    'pseudo',
                    'roles',
                    'gender',
                    'credits',
                    'driver_preferences',
                    'created_at',
                    'image',
                    'rating',
                    'is_verified',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    6 => 2,
                    10 => 255,
                ],
                'unique' => [
                    2 => true,
                ],
                'nullable' => [
                    8 => true,
                    10 => true,
                    true,
                ],
                'fetch' => [
                    13 => 2,
                    2,
                    2,
                ],
                'sourceEntity' => [
                    13 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'mappedBy' => [
                    13 => 'owner',
                    'driver',
                    'passengers',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    13 => 'vehicles',
                    'ridesAsDriver',
                    'ridesAsPassenger',
                ],
                'targetEntity' => [
                    13 => 'App\\Entity\\Vehicle',
                    'App\\Entity\\Ride',
                    'App\\Entity\\Ride',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Vehicle',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VehicleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'brand' => $o[2],
                        'model' => $o[3],
                        'isElectric' => $o[4],
                        'plateNumber' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'brand' => 'brand',
                        'model' => 'model',
                        'is_electric' => 'isElectric',
                        'plate_number' => 'plateNumber',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'brand' => 'brand',
                        'model' => 'model',
                        'isElectric' => 'is_electric',
                        'plateNumber' => 'plate_number',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'vehicle',
                    ],
                ],
                'associationMappings' => [
                    [
                        'owner' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Vehicle',
                    7 => 'owner_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'boolean',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'brand',
                    'model',
                    'isElectric',
                    'plateNumber',
                ],
                'columnName' => [
                    1 => 'id',
                    'brand',
                    'model',
                    'is_electric',
                    'plate_number',
                ],
                'length' => [
                    2 => 255,
                    255,
                    5 => 255,
                ],
                'fetch' => [
                    6 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Vehicle',
                ],
                'inversedBy' => [
                    6 => 'vehicles',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'owner_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'owner_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'owner_id' => 'owner_id',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'nullable' => [
                    7 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'owner',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
