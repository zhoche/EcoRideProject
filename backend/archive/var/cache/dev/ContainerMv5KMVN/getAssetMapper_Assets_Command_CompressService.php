<?php

namespace ContainerMv5KMVN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAssetMapper_Assets_Command_CompressService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'asset_mapper.assets.command.compress' shared service.
     *
     * @return \Symfony\Component\AssetMapper\Command\CompressAssetsCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/SignalableCommandInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/asset-mapper/Command/CompressAssetsCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/asset-mapper/Compressor/CompressorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/asset-mapper/Compressor/ChainCompressor.php';

        $container->privates['asset_mapper.assets.command.compress'] = $instance = new \Symfony\Component\AssetMapper\Command\CompressAssetsCommand(new \Symfony\Component\AssetMapper\Compressor\ChainCompressor(NULL, ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'))));

        $instance->setName('assets:compress');
        $instance->setDescription('Pre-compresses files to serve through a web server');

        return $instance;
    }
}
